default:
  image: 676826599814.dkr.ecr.us-east-2.amazonaws.com/gitlab-runner-image-aws-sdk:1.0

stages:          
  - terraform-apply
  - docker-build

terrafom-apply:       
  stage: terraform-apply
  tags: 
    - shared
  cache:
    key: $CI_COMMIT_BRANCH-terraform
    paths:
      - terraform/.terraform    
  script:
    - cd terraform
    - terraform init
    - terraform apply -auto-approve
  resource_group: terraform-apply
  rules:
  - changes:
      - terraform/*
      - images/**/*
      - .gitlab-ci.yml
  environment:
    name: shd

gitlab-docker-build:
  resource_group: ${SYSTEM_NAME}-docker-build
  stage: docker-build
  tags:
    - shared
  image:
    name: 676826599814.dkr.ecr.us-east-2.amazonaws.com/gitlab-runner-image-kaniko:1.0
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - version=$(ls ${CI_PROJECT_DIR}/images/gitlab/gitlab-runner-image-${SYSTEM_NAME} | egrep -v 'Dockerfile|conf|jar|sh' )
    - echo "{\"credHelpers\":{\"${AWS_ACCOUNT_NUMBER}.dkr.ecr.${AWS_REGION}.amazonaws.com\":\"ecr-login\"}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/images/gitlab/gitlab-runner-image-${SYSTEM_NAME}/Dockerfile"
      --destination "${AWS_ACCOUNT_NUMBER}.dkr.ecr.${AWS_REGION}.amazonaws.com/gitlab-runner-image-${SYSTEM_NAME}:${version}"
  parallel:
    matrix:
      - SYSTEM_NAME: [argocli, jdk11, newman, nodejs, nodejs-16-15-0] # 수동 입력 필요
  rules:
  - changes:
      - images/gitlab/gitlab-runner-image-${SYSTEM_NAME}/*
  environment:
    name: shd

k8s-docker-build:
  resource_group: ${SYSTEM_NAME}-docker-build
  stage: docker-build
  tags:
    - shared
  image:
    name: 676826599814.dkr.ecr.us-east-2.amazonaws.com/gitlab-runner-image-kaniko:1.0
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - version=$(ls ${CI_PROJECT_DIR}/images/k8s/${SYSTEM_NAME} | egrep -v 'Dockerfile|conf|jar|sh' )
    - echo "{\"credHelpers\":{\"${AWS_ACCOUNT_NUMBER}.dkr.ecr.${AWS_REGION}.amazonaws.com\":\"ecr-login\"}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/images/k8s/${SYSTEM_NAME}/Dockerfile"
      --destination "${AWS_ACCOUNT_NUMBER}.dkr.ecr.${AWS_REGION}.amazonaws.com/${SYSTEM_NAME}:${version}"
  parallel:
    matrix:
      - SYSTEM_NAME: [metric, fluentbit, external-secrets, dex, argocd, redis, cluster-autoscaler, external-dns, ingress-nginx-controller, ingress-nginx-kube-webhook-certgen, cloudwatch-agent, dump-collector] # 수동 입력 필요
  rules:
  - changes:
      - images/k8s/${SYSTEM_NAME}/*
  environment:
    name: shd

app-docker-build:
  resource_group: ${SYSTEM_NAME}-docker-build
  stage: docker-build
  tags:
    - shared
  image:
    name: 676826599814.dkr.ecr.us-east-2.amazonaws.com/gitlab-runner-image-kaniko:1.0
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - version=$(ls ${CI_PROJECT_DIR}/images/app/${SYSTEM_NAME} | egrep -v 'Dockerfile|conf|jar|sh' )
    - echo "{\"credHelpers\":{\"${AWS_ACCOUNT_NUMBER}.dkr.ecr.${AWS_REGION}.amazonaws.com\":\"ecr-login\"}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/images/app/${SYSTEM_NAME}"
      --dockerfile "Dockerfile"
      --destination "${AWS_ACCOUNT_NUMBER}.dkr.ecr.${AWS_REGION}.amazonaws.com/${SYSTEM_NAME}:${version}"
  parallel:
    matrix:
      - SYSTEM_NAME: [batch, nginx, nodejs-16-15-0, openjdk-11-jdk-slim-lena, openjdk-11-jre-slim] # 수동 입력 필요
  rules:
  - changes:
      - images/app/${SYSTEM_NAME}/*
  environment:
    name: shd
